version: '3.7'

services:
  db:
    image: postgres:latest
    restart: ${RESTART_POLICY}
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - TZ=${TZ}
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user

  app:
    image: nextcloud:stable-fpm
    restart: ${RESTART_POLICY}
    links:
      - db
      - web
      - redis
    volumes:
      - nextcloud:/var/www/html
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - NEXTCLOUD_TRUSTED_DOMAINS:${NEXTCLOUD_URL}
      - TZ=${TZ}
    depends_on:
      - db
      - redis
    secrets:
      - nextcloud_admin_password
      - nextcloud_admin_user
      - postgres_db
      - postgres_password
      - postgres_user
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:cloud.${DOMAINNAME}"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.docker.network=traefik_web"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.redirect.permanent=true"
      - "traefik.frontend.redirect.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.frontend.redirect.replacement=https://$$1/remote.php/dav/"
      - "traefik.frontend.headers.customFrameOptionsValue=allow-from https://cloud.${DOMAINNAME}"
      - "traefik.frontend.passHostHeader=true"
    networks:
      - lan

  web:
    image: nginx:latest
    restart: ${RESTART_POLICY}
    ports:
      - 8080:80
    volumes:
      - ./custom/nginx.conf:/etc/nginx/nginx.conf:ro
      - nextcloud:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nginx"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:${DOMAINNAME}"
      - "traefik.docker.network=lan"
    environment:
      - TZ=${TZ}
    networks:
      - lan
      - traefik_web

  redis:
    image: redis:latest
    hostname: redis
    container_name: redis
    restart: ${RESTART_POLICY}
    networks:
      - lan
    environment:
      - TZ=${TZ}

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: ${RESTART_POLICY}
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    environment:
      - TZ=${TZ}
    networks:
      - lan
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_web"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"

  reverse_proxy:
    image: traefik:latest
    restart: ${RESTART_POLICY}
    ports:
      # The HTTP port
      - "80:80"
      #Â The HTTPS port
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # traefik static configuration
      - ./custom/traefik.yaml:/etc/traefik/traefik.yaml:ro
      # custom folder with dynamic configuration
      - ./custom:/etc/traefik/custom:ro
      # ssl volumes to store acme.json
      - certs:/letsencrypt
    networks:
      - traefik_web
      - lan
    command:
      --api
      --docker
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"  
      - "traefik.docker.network=traefik_web"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    environment:
      - TZ=${TZ}


volumes:
  db:
  nextcloud:
  certs:

secrets:
  nextcloud_admin_password:
    file: ./secrets/nextcloud_admin_password.txt # put admin password in this file
  nextcloud_admin_user:
    file: ./secrets/nextcloud_admin_user.txt # put admin username in this file
  postgres_db:
    file: ./secrets/postgres_db.txt # put postgresql db name in this file
  postgres_password:
    file: ./secrets/postgres_password.txt # put postgresql password in this file
  postgres_user:
    file: ./secrets/postgres_user.txt # put postgresql username in this file

networks:
  traefik_web:
    external: true
    name: web

  lan:
    driver: bridge
